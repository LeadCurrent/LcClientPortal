@model Web.UserVM
@using Data
@using Web

@Html.HiddenFor(m => m.Action)
@Html.HiddenFor(m => m.RemoveId)
@Html.HiddenFor(m => m.AjaxUpdate)
@Html.HiddenFor(m => m.CompanyId)
@Html.HiddenFor(m => m.Company.Id)
@Html.HiddenFor(m => m.Param)

<div class="white-bg">
    @if (!Model.ShowExistingAccount)
    {
        <div class="sectionheader mt-0">Email</div>
        <div class="input-form">
            <div class="buttons">
                <button class="button" onclick="Ajax('Connect to Existing accounts')">Connect To Existing Accounts</button>
                    <button class="button" onclick="Ajax('Show Add LastSyncDate Google')">Connect Gmail Account</button>
                    <button class="button" onclick="Ajax('Show Add LastSyncDate Microsoft')">Connect Office 365 Account</button>
                @* <button class="button" onclick="Ajax('Show Other Account Fields')"> Connect Other Account </button> *@
            </div>
        </div>
    }
    @if (Model.ShowAddStartSyncDate)
    {
        <div class="white-bg">
            <div class="sectionheader mt-0">Add a Start Sync Date</div>
            <div style="display:flex;justify-content:center;">
                <table>
                    <tr>
                        <td>
                            <div>
                                @Html.EditorFor(m => m.LastSyncDate, new { htmlAttributes = new { @onchange = "document.getElementById('ConnectAccount').style.display = 'inline'" } })
                            </div>
                            <div class="buttons">
                                @if (Model.ConnectGmailAccount)
                                {
                                    <button class="button" id="ConnectAccount" style="display:none" onclick="NonAjax('Connect to my gmail account')">Connect Gmail Account</button>
                                }
                                else if (Model.ConnectMicrosoftAccount)
                                {
                                    <button class="button" id="ConnectAccount" style="display:none" onclick="NonAjax('Connect to my microsoft account')">Connect Office 365 Account</button>
                                }
                                <button class="gridbutton" onclick="Ajax('Cancel Add other Account')">Cancel</button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    }
    @if (Model.ShowAddOtherAccount)
    {
        <div class="white-bg">
            <div class="sectionheader mt-0">Connect To Other Account</div>
            <div style="display:flex;justify-content:center;">
            <table>
                <tr>
                    <td>
                        <div class="formlabel">
                           Name:
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.OtherAccountName)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="formlabel">
                            Email :
                        </div>
                        <div>
                            @Html.EditorFor(m => m.OtherAccountEmail)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button class="button" onclick="Ajax('Connect to my other account')">Submit</button>
                        <button class="gridbutton" onclick="Ajax('Cancel Add other Account')">Cancel</button>
                     </td>
                </tr>
                </table>
            </div>
        </div>

    }
    @if (Model.CompanyEmailAccounts.Any())
    {
        @if (Model.ShowExistingAccount)
        {
            <div class="sectionheader mt-0">Connect To Existing Account</div>
            <div class="buttons">           
                <button class="button" onclick="Ajax('Go Back')">Go Back</button>
            </div>
        }
        <div class="pt-3">
            <table class="tablestyle" style="width:100%">
                <tr class="desktop">
                    <th>
                        Email Type
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Email
                    </th>
                    <th>

                    </th>
                </tr>

                @foreach (var CompanyEmailAccount in Model.CompanyEmailAccounts)
                {
                    <tr>
                        <td class="desktop">@CompanyEmailAccount.EmailType</td>
                        <td class="desktop">@CompanyEmailAccount.Name</td>
                        <td class="desktop">@CompanyEmailAccount.Email</td>
                        @if (CompanyEmailAccount.IsDefault && !Model.ShowExistingAccount)
                        {
                            <td class="desktop">
                                <b>Default Email</b>
                                
                                <button class="gridbutton ml-5 mr-1" onclick="NonAjaxWithParamAndConfirmation('Remove Default Email Account',@CompanyEmailAccount.Id,'Are you sure you want to delete this email account')">Remove</button>
                            </td>
                        }
                        else
                        {
                            <td class="desktop">
                                @if (!Model.ShowExistingAccount)
                                {
                                <button class="gridbutton" onclick="NonAjaxWithParam('Set Default Email',@CompanyEmailAccount.Id)">Set as Default</button>                          
                                <button class="gridbutton ml-3" onclick="NonAjaxWithParamAndConfirmation('Remove Email Account',@CompanyEmailAccount.Id,'Are you sure you want to delete this email account')">Remove</button>
                                }
                                else
                                {
                                    <button class="gridbutton" onclick="NonAjaxWithParam('Add Account',@CompanyEmailAccount.Id)">Add Account </button>
                                }
                            </td>
                        }
                        <td class="mobileportrait-mobilewide">
                            @if (CompanyEmailAccount.IsDefault)
                            {
                                <div style="font-size:15px;"><b>Default Email</b></div>
                            }
                            <div>
                                <b class="secondary-text pr-10">Email Type: </b>@CompanyEmailAccount.EmailType
                            </div>
                            <div>
                                <b class="secondary-text pr-10">Name: </b>@CompanyEmailAccount.Name
                            </div>
                            <div>
                                <b class="secondary-text pr-10">Email Account </b>@CompanyEmailAccount.Email
                            </div>

                            <div class="buttons">
                                @if (!CompanyEmailAccount.IsDefault)
                                {
                                    <button class="gridbutton" onclick="NonAjaxWithParam('Set Default Email',@CompanyEmailAccount.Id)">Set as Default</button>
                                    @if (!Model.ShowExistingAccount)
                                    {
                                        <button class="gridbutton" onclick="NonAjaxWithParamAndConfirmation('Remove Email Account ',@CompanyEmailAccount.Id,'Are you sure you want to delete this email account')">Remove</button>
                                    }
                                }
                                else
                                {
                                   <button class="gridbutton" onclick="NonAjaxWithParamAndConfirmation('Remove Email Account ',@CompanyEmailAccount.Id,'Are you sure you want to delete this email account')">Remove</button>                    
                                }
                            </div>
                        </td>
                    </tr>
                }
            </table>
        </div>

    }
    

</div>

