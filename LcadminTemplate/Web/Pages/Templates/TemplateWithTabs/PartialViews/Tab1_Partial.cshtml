@using Data
@using Web
@model Web.TemplateWithTabsVM



@Html.HiddenFor(m => m.AjaxUpdate)
@Html.HiddenFor(m => m.Param)
@Html.HiddenFor(m => m.Action)



<div id="popupbackground" class="popup-background" style="display:none;">
</div>

<div class="pagetitle">Tab Template </div>
<div class="form-1000">
    @{
        await Html.RenderPartialAsync("Sections/Tabs.cshtml");
    }
    @if (Model.Edit)
    {
        @Html.HiddenFor(x => x.Template.Id)
        @Html.HiddenFor(x => x.Template.Status)
        @Html.HiddenFor(x => x.Template.Dropdown)
        @Html.HiddenFor(x => x.Template.RadioSelect)
        @Html.HiddenFor(x => x.Template.CheckBox)
        <div class="sectionheader mt-0">Edit Template</div>
        <div class="white-bg">
            <div class="input-form">
                <table>
                    <tr>
                        <td>
                            <div class="formlabel">
                                Name:
                                <span id="Template_Name_Invalid" class="required">*</span>
                            </div>
                            @Html.EditorFor(m => m.Template.Name, new { htmlattributes = new { @class = "requiredfield", onkeyup = "ValidateForm();" } })
                        </td>
                        <td>
                            <div class="formlabel">
                                Date:
                                <span id="Date_Invalid" class="required">*</span>
                            </div>
                            @Html.HiddenFor(x => x.Template.Date)
                            <input class="requiredfield"
                                   id="Date"
                                   type="date"
                                   value="@CommonClasses.StringFormating.DatePicker(Model.Template.Date)"
                                   onchange="document.getElementById('Template_Date').value = document.getElementById('Date').value; ValidateForm();">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="formlabel">
                                Number:
                                <span id="Template_Number_Invalid" class="required">*</span>
                            </div>
                            @Html.EditorFor(m => m.Template.Number, new { htmlattributes = new { @class = "width100 requirednumeric", onclick = "if (this.value == '0') this.value = '';", onkeyup = "ValidateForm();" } })
                        </td>
                        <td>
                            <div class="formlabel">
                                Currency:
                                <span id="Template_Currency_Invalid" class="required">*</span>
                            </div>
                            <div class="currency-input ">
                                <span class="currency-sign">$</span>
                                @Html.EditorFor(m => m.Template.Currency, new { htmlattributes = new { @class = "requireddecimal", onclick = "if (this.value == '0.00') this.value = '';", onkeyup = "ValidateForm();" } })
                            </div>
                        </td>
                    </tr>
                </table>
                <div class="validation-message" id="Invalid">
                    <i>Fill in all required fields</i>
                </div>

                <div class="buttons">
                    <button id="Valid" class="button" onclick="Ajax('Save Changes')">Save Changes</button>
                    <button class="button" onclick="Ajax('')">Cancel</button>
                </div>
            </div>
        </div>
        <script>ValidateForm();</script>
    }
    else
    {
       
        <table class="tablestyle">
            <tr class="mobilewide-desktop">
                <th>
                    Name
                </th>
                <th>
                    Date
                </th>
                <th>
                    Number
                </th>
                <th>
                    Currency
                </th>
                <th>

                </th>
            </tr>
            @foreach (var Template in Model.Templates)
            {
                <tr>
                    <td class="mobilewide-desktop">
                        @Template.Name
                    </td>
                    <td class="mobilewide-desktop">
                        @CommonClasses.StringFormating.FormatDate(Template.Date)
                    </td>
                    <td class="mobilewide-desktop">
                        @Template.Number
                    </td>
                    <td class="mobilewide-desktop">
                        $@Template.Currency
                    </td>
                    <td class="mobilewide-desktop">
                        <button class="gridbutton" onclick="AjaxWithParam('Edit',@Template.Id)">Edit</button>
                    </td>
                    <td class="mobileportrait">
                        <div>
                            <b>Name: </b>@Template.Name
                        </div>
                        <div>
                            <b>Name: </b> @Template.Name
                        </div>
                        <div>
                            <b>Date: </b> @CommonClasses.StringFormating.FormatDate(Template.Date)
                        </div>
                        <div>
                            <b>Number: </b>@Template.Number
                        </div>
                        <div>
                            <b>Currency: </b>$@Template.Currency
                        </div>
                        <div class="center">
                            <button class="gridbutton" onclick="AjaxWithParam('Edit',@Template.Id)">Edit</button>
                        </div>
                    </td>
                </tr>
            }
        </table>
    }
</div>

