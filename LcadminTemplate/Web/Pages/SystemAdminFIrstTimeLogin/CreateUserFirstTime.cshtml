@model Web.UserVM
@using Data
@using Web

@using static Web.GeneralEnumDDLs
@{
    if (Model.MobileApp)
        Layout = "~/Pages/Shared/NoNavLayout.cshtml";
    else
        Layout = "~/Pages/Shared/TemplateLayout.cshtml";
}
<style>
    .password-wrapper {
        position: relative;
        display: inline-block;
        width: 100%;
    }

        .password-wrapper input {
            width: 100%;
            padding-right: 30px; /* space for the icon */
        }

    .toggle-password {
        position: absolute;
        top: 50%;
        right: 10px;
        transform: translateY(-50%);
        cursor: pointer;
        font-size: 16px;
        user-select: none;
    }

</style>
@using (Html.BeginForm("CreateUserFirstTime", "SystemAdminFirstTimeLogin", FormMethod.Post, new { id = "form", enctype = "multipart/form-data" }))
{
    <div id="partialview">
        @{
            <div class="pagetitle">Create User</div>
            <div class="form-800">
                <div class="white-bg">
                    <div class="input-form">
                        @if (Model.CreateSuccessful)
                        {
                            <script>
                                document.getElementById('GoBack').click();
                            </script>
                        }

                        @{
                            <table>
                                <tr>
                                    <td>
                                        <div class="formlabel">
                                            First Name:
                                            <span id="User_FirstName_Invalid" class="required">*</span>
                                        </div>
                                        <div>
                                            @Html.EditorFor(m => m.User.FirstName, new { htmlattributes = new { @class = "requiredfield", onkeyup = "ValidateForm();" } })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="formlabel">
                                            Last Name:
                                            <span id="User_LastName_Invalid" class="required">*</span>
                                        </div>
                                        <div>
                                            @Html.EditorFor(m => m.User.LastName, new { htmlattributes = new { @class = "requiredfield", onkeyup = "ValidateForm();" } })
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <div class="formlabel">
                                            Email:
                                        </div>
                                        <div>
                                            @Html.EditorFor(m => m.User.Email, new { htmlattributes = new { onkeyup = "ValidateForm();" } })
                                        </div>
                                    </td>

                                    <td>
                                        <div class="formlabel">
                                            Phone Number:
                                        </div>
                                        <div>
                                            @Html.EditorFor(model => Model.User.Phone, new { htmlattributes = new { onkeyup = "formatphone('User_Phone');" } })
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <div class="formlabel">
                                            User Name:<span id="User_UserName_Invalid" class="required">*</span>
                                        </div>
                                        <div>
                                            @Html.EditorFor(m => m.User.UserName, new { htmlattributes = new { @class = "requiredfield", onkeyup = "ValidateForm();" } })

                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="display:none;">
                                        <div class="formlabel">
                                            User Name:<span id="User_UserName_Invalid" class="required">*</span>
                                        </div>
                                        <div>
                                            @Html.EditorFor(m => m.User.UserName, new { htmlattributes = new { @class = "requiredfield", onkeyup = "ValidateForm();" } })

                                        </div>
                                    </td>
                                </tr>
                                @if (Model.User.UserName == null)
                                {
                                    <tr>
                                        <td>
                                            <div class="formlabel">
                                                Password:
                                                <span id="Password_Invalid" class="required">*</span>
                                            </div>
                                            <div class="password-wrapper">
                                                @Html.EditorFor(m => m.Password, new { htmlattributes = new { @class = "requiredpassword password-field", id = "Password", onkeyup = "ValidateForm();" } })
                                                <span class="toggle-password" onclick="togglePassword('Password', this)">👁️</span>
                                            </div>
                                            @if (Model.PasswordInvalid)
                                            {
                                                <br />
                                                <span style="color:red"><i>Invalid Password</i></span>
                                            }
                                            <div><i>6+ characters, 1+ letter, 1+ number</i></div>
                                        </td>
                                        <td>
                                            <div class="formlabel">
                                                Repeat&nbsp;Password:
                                                <span id="ConfirmPassword_Invalid" class="required">*</span>
                                            </div>
                                            <div class="password-wrapper">
                                                @Html.EditorFor(m => m.ConfirmPassword, new { htmlattributes = new { @class = "requiredconfirmpassword password-field", id = "ConfirmPassword", onkeyup = "ValidateForm();" } })
                                                <span class="toggle-password" onclick="togglePassword('ConfirmPassword', this)">👁️</span>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td>
                                        <div class="formlabel">
                                            Roles:
                                        </div>
                                        <div style="text-align:left">
                                            @Html.CheckBoxFor(m => m.User.SystemAdmin, new { @disabled = "disabled" }) SystemAdmin
                                            @Html.HiddenFor(m => m.User.SystemAdmin)
                                        </div>
                                    </td>
                                    <td>
                                    </td>
                                </tr>
                            </table>
                            @if (Model.UpdateSuccessful)
                            {
                                <div class="success-message">
                                    User updated successfully
                                </div>
                            }

                            <div class="validation-message" id="PasswordsDoNotMatch" style="display:none">
                                Passwords do not match
                            </div>
                            <div class="validation-message" id="Invalid" style="display:none">
                                Fill in all required fields
                            </div>
                        }
                        @if (Model.ErrorMessage != null)
                        {
                            <div class="validation-message">
                                @Model.ErrorMessage
                            </div>
                        }
                        <div class="buttons">
                            <button id="Valid" class="button" onclick="Ajax('Create')">Create User</button>
                            <button class="button" id="GoBack" onclick="NonAjax('Cancel')">Go Back</button>
                        </div>
                    </div>
                </div>
            </div>
            <script>
                ValidateForm();
            </script>
        }
    </div>
}
<script>
    highlightcurrentpage('nav_SystemAdminUser');

    function togglePassword(fieldId, icon) {
        var field = document.getElementById(fieldId);
        if (field.type === "password") {
            field.type = "text";
            icon.textContent = "👁️‍🗨️";
        } else {
            field.type = "password";
            icon.textContent = "👁️";
        }
    }

</script>